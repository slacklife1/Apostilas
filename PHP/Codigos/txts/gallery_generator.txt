            File Information

            Verifying link...

            Register Your DAP

Please visit our sponsor
    //**************************************
    // Name: image gallery generator
    // Description:script will search directory defined by $dd
    for images beginning with category types
    defined by $cat1, and will generate an image
    gallery, no thumbnails, just a description
    pulled from the file name and the resolution
    of the image, must be jpg...
    files should be named like:
    wp - my old wallpaper.jpg
    p - flyer for saturday party.jpg
    (category abbrev.) - (image description).jpg
    // By: Larry Williamson
    //
    //
    // Inputs:variable $dd should be a directory containing images to scan
    //
    // Returns:html with tables containing an image listing and resolutions, with "about:" generated popups for each
    //
    //Assumes:must be jpg files
    //
    //Side Effects:none that i know of...
    //This code is copyrighted and has limited warranties.
    //Please see http://www.Planet-Source-Code.com/xq/ASP/txtCodeId.610/lngWId.8/qx/vb/scripts/ShowCode.htm
    //for details.
    //**************************************
    
    <? 
    // image gallery generator :: april 2002
    // larry@escape-designs.com
    // script will search directory defined by $dd
    // for images beginning with category types
    // defined by $cat1, and will generate an image
    // gallery, no thumbnails, just a description
    // pulled from the file name and the resolution
    // of the image, must be jpg...
    // files should be named like:
    // wp - my old wallpaper.jpg
    // p - flyer for saturday party.jpg
    // (category abbrev.) - (image description).jpg
    // set the default image directory in case one is 
    // not specified...
    $defaultdir="/home/nyte/www/images/portfolio/";
    // setup the categories, this determines what
    // the script scans for in the first part of
    // the file name...
    $cat1=array("art","web","p","wp");
    // setup the category descriptions, in order
    // defined by cat1 array...
    $catd1=array("art", "web", "print", "wallpapers");
    function dolisting ($dir2look) {
    $art=array();
    $p=array();
    $wp=array();
    $web=array();
    $dp=opendir($dir2look); 
    while($file = readdir($dp)) { $filenames[] = $file; } 
    for($i=0;$i<count($filenames);$i++) { 
    if(!is_dir($filenames[$i]) && ereg("-", "$filenames[$i]") && $filenames[$i] != '.' && $filenames[$i] != '..') {
    $tc = substr("$filenames[$i]", 0, 3);
    if (ereg("art", "$tc") | ereg("wp", "$tc") | ereg("web", "$tc") | ereg("p", "$tc")) {
    $filenames[$i] = $logs_dir.$filenames[$i]; 
    $f = $filenames[$i];
    list ($cat, $desc) = split (' - ', $f);
    $desc = strtolower(str_replace(".jpg", "", "$desc"));
    $sv = $sv . "!!!$cat###$desc";
    }
    }
    if (is_dir($filenames[$i]) && $filenames[$i] != '.' && $filenames[$i] != '..') 
    { $dir2look1="$filenames[$i]"; dolisting($dir2look1); } 
    } 
    $filez = spliti("!!!",$sv);
    sort($filez);
    for ($z=1; $filez[$z]<>""; $z++) { 
    $ts = spliti("###", $filez[$z]);
    eval("\$$ts[0]c++;");
    eval("\$aaa=\"\$$ts[0]c\";");
    eval("\$$ts[0]" . "[$aaa]=\"$ts[1]\";");
    }
    $xd=0;
    while ($cat1[$xd] <> "") {
    $catd=$catd1[$xd]; 
    $cat=$cat1[$xd];
    print "<br>category: $catd ("; 
    eval("print count(\$" . $cat . ");"); 
    print " listings)<br><hr><table cellpadding=2 cellspacing=1 border=1 width=100%>";
    for ($q=1;;$q++) { 
    eval("\$qt=count(\$" . $cat . ");");
    if ($q > $qt) { print "</table>"; break; }
    eval("\$tp=\"\$" . $cat . "[$q]\";"); 
    $loc++;
    if ($bgc1 == 1 || $bgc == "") { $bgc = "#999999"; $bgc1 = 2; }
    if ($bgc1 == 2) { $bgc = "#888888"; $bgc1 = 1; }
    $imagehw = GetImageSize("$dir2look/$cat - $tp.jpg");
    $imagewidth = $imagehw[0]; $imageheight = $imagehw[1];
    if ($loc == 1) { echo "<tr><td width=100 bgcolor=$bgc>"; }
    if ($loc == 2) { echo "</td><td width=100 bgcolor=$bgc>"; }
    if ($loc == 3) { echo "</td><td width=100 bgcolor=$bgc>"; }
    print("<a target=_new onMouseover='parent.status=\"click to view in another window...\"; return true;' href=\"about:<body bgcolor=white><table width=100%><td align=center style='font-family: verdana;'><a href=javascript:window.close(); style='text-decoration: none; color: black; text-transform: uppercase;'><img src='http://raverland.org/nyte/portfolio/$dir2look/$cat - $tp.jpg' border=0 alt='click to close window'><h2>$tp</h2><small>click to close</small></a></td></table>\" style='font-size: 20px;'>" . doz("$q") . "</a><br>$tp<br><small>" . $imagewidth . "x" . $imageheight . "</small>"); 
    if ($loc == 3) { echo "</td><tr>"; $loc=0; }
    }
    $loc=0;
    $xd++;
    }
    }
    function doz($tex) {
    $aaa = 3 - strlen($tex);
    $aaa = str_repeat("0",$aaa) . $tex;
    return $aaa;
    }
    if ($d=="") { $dd = "$defaultdir"; dolisting($dd); }
    else { dolisting($d); }
    ?>
		

